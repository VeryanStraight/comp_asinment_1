#BlueJ class context
comment0.target=DeShredder
comment0.text=\n\ DeShredder\ allows\ a\ user\ to\ sort\ fragments\ of\ a\ shredded\ document\ ("shreds")\ into\ strips,\ and\n\ then\ sort\ the\ strips\ into\ the\ original\ document.\n\ The\ program\ shows\n\ \ \ -\ a\ list\ of\ all\ the\ shreds\ along\ the\ top\ of\ the\ window,\ \n\ \ \ -\ the\ working\ strip\ (which\ the\ user\ is\ constructing)\ just\ below\ it.\n\ \ \ -\ the\ list\ of\ completed\ strips\ below\ the\ working\ strip.\n\ The\ "rotate"\ button\ moves\ the\ first\ shred\ on\ the\ list\ to\ the\ end\ of\ the\ list\ to\ let\ the\n\ \ user\ see\ the\ shreds\ that\ have\ disappeared\ over\ the\ edge\ of\ the\ window.\n\ The\ "shuffle"\ button\ reorders\ the\ shreds\ in\ the\ list\ randomly\n\ The\ user\ can\ use\ the\ mouse\ to\ drag\ shreds\ between\ the\ list\ at\ the\ top\ and\ the\ working\ strip,\n\ \ and\ move\ shreds\ around\ in\ the\ working\ strip\ to\ get\ them\ in\ order.\n\ When\ the\ user\ has\ the\ working\ strip\ complete,\ they\ can\ move\n\ \ the\ working\ strip\ down\ into\ the\ list\ of\ completed\ strips,\ and\ reorder\ the\ completed\ strips\n\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=\n\ Initialises\ the\ UI\ window,\ and\ sets\ up\ the\ buttons.\ \n
comment10.params=
comment10.target=int\ lengthOFImmage()
comment10.text=\n\ finds\ the\ length\ of\ the\ longest\ strip\n\ \n
comment11.params=lengthRequired\ length\ immage\ row
comment11.target=java.lang.String\ pad(int,\ int,\ java.awt.Color[][],\ int)
comment11.text=\n\ pads\ the\ required\ space\ with\ white\ in\ the\ 2d\ array\n\ \n
comment12.params=
comment12.target=void\ shuffleList()
comment12.text=\n\ Shuffle\ the\ list\ of\ all\ shreds\ into\ a\ random\ order\n\ and\ redisplay;\n
comment13.params=
comment13.target=void\ completeStrip()
comment13.text=\n\ Move\ the\ current\ working\ strip\ to\ the\ end\ of\ the\ list\ of\ completed\ strips.\n\ (Called\ by\ the\ "Complete\ Strip"\ button)\n
comment14.params=action\ x\ y
comment14.target=void\ doMouse(java.lang.String,\ double,\ double)
comment14.text=\n\ Simple\ Mouse\ actions\ to\ move\ shreds\ and\ strips\n\ \ User\ can\n\ \ -\ move\ a\ Shred\ from\ allShreds\ to\ a\ position\ in\ the\ working\ strip\n\ \ -\ move\ a\ Shred\ from\ the\ working\ strip\ back\ into\ allShreds\n\ \ -\ move\ a\ Shred\ around\ within\ the\ working\ strip.\n\ \ -\ move\ a\ completed\ Strip\ around\ within\ the\ list\ of\ completed\ strips\n\ \ -\ move\ a\ completed\ Strip\ back\ to\ become\ the\ working\ strip\n\ \ \ \ (but\ only\ if\ the\ working\ strip\ is\ currently\ empty)\n\ Moving\ a\ shred\ to\ a\ position\ past\ the\ end\ of\ a\ List\ should\ put\ it\ at\ the\ end.\n\ You\ should\ create\ additional\ methods\ to\ do\ the\ different\ actions\ -\ do\ not\ attempt\n\ \ to\ put\ all\ the\ code\ inside\ the\ doMouse\ method\ -\ you\ will\ lose\ style\ points\ for\ this.\n\ Attempting\ an\ invalid\ action\ should\ have\ no\ effect.\n\ Note\:\ doMouse\ uses\ getStrip\ and\ getColumn,\ which\ are\ written\ for\ you\ (at\ the\ end).\n\ You\ should\ not\ change\ them.\n
comment15.params=toStrip
comment15.target=void\ moveStrip(java.util.List)
comment16.params=toStrip\ toPosition
comment16.target=void\ moveShred(java.util.List,\ int)
comment17.params=toStrip\ toPosition
comment17.target=boolean\ validAction(java.util.List,\ int)
comment18.params=
comment18.target=void\ display()
comment18.text=\n\ Displays\ the\ remaining\ Shreds,\ the\ working\ strip,\ and\ all\ completed\ strips\n
comment19.params=x
comment19.target=int\ getColumn(double)
comment19.text=\n\ Returns\ which\ column\ the\ mouse\ position\ is\ on.\n\ This\ will\ be\ the\ index\ in\ the\ list\ of\ the\ shred\ that\ the\ mouse\ is\ on,\ \n\ (or\ the\ index\ of\ the\ shred\ that\ the\ mouse\ would\ be\ on\ if\ the\ list\ were\ long\ enough)\n
comment2.params=
comment2.target=void\ loadLibrary()
comment2.text=\n\ Asks\ user\ for\ a\ library\ of\ shreds,\ loads\ it,\ and\ redisplays.\n\ Uses\ UIFileChooser\ to\ let\ user\ select\ library\n\ and\ finds\ out\ how\ many\ images\ are\ in\ the\ library\n\ Calls\ load(...)\ to\ construct\ the\ List\ of\ all\ the\ Shreds\n
comment20.params=y
comment20.target=java.util.List\ getStrip(double)
comment20.text=\n\ Returns\ the\ strip\ that\ the\ mouse\ position\ is\ on.\n\ This\ may\ be\ the\ list\ of\ all\ remaining\ shreds,\ the\ working\ strip,\ or\n\ \ one\ of\ the\ completed\ strips.\n\ If\ it\ is\ not\ on\ any\ strip,\ then\ it\ returns\ null.\n
comment21.params=args
comment21.target=void\ main(java.lang.String[])
comment22.params=imageFileName
comment22.target=java.awt.Color[][]\ loadImage(java.lang.String)
comment22.text=\n\ Load\ an\ image\ from\ a\ file\ and\ return\ as\ a\ two-dimensional\ array\ of\ Color.\n\ From\ COMP\ 102\ assignment\ 8&9.\n\ Maybe\ useful\ for\ the\ challenge.\ Not\ required\ for\ the\ core\ or\ completion.\n
comment23.params=imageArray\ imageFileName
comment23.target=void\ saveImage(java.awt.Color[][],\ java.lang.String)
comment23.text=\n\ Save\ a\ 2D\ array\ of\ Color\ as\ an\ image\ file\n\ From\ COMP\ 102\ assignment\ 8&9.\n\ Maybe\ useful\ for\ the\ challenge.\ Not\ required\ for\ the\ core\ or\ completion.\n
comment3.params=dir\ count
comment3.target=void\ load(java.nio.file.Path,\ int)
comment3.text=\n\ Empties\ out\ all\ the\ current\ lists\ (the\ list\ of\ all\ shreds,\n\ \ the\ working\ strip,\ and\ the\ completed\ strips).\n\ Loads\ the\ library\ of\ shreds\ into\ the\ allShreds\ list.\n\ Parameters\ are\ the\ directory\ containing\ the\ shred\ images\ and\ the\ number\ of\ shreds.\n\ Each\ new\ Shred\ needs\ the\ directory\ and\ the\ number/id\ of\ the\ shred.\n
comment4.params=
comment4.target=void\ rotateList()
comment4.text=\n\ Rotate\ the\ list\ of\ all\ shreds\ by\ one\ step\ to\ the\ left\n\ and\ redisplay;\n\ Should\ not\ have\ an\ error\ if\ the\ list\ is\ empty\n\ (Called\ by\ the\ "Rotate"\ button)\n
comment5.params=
comment5.target=void\ findSimmlarShred()
comment6.params=list1\ list2
comment6.target=boolean\ isSimmlar(java.awt.Color[],\ java.awt.Color[])
comment7.params=shred
comment7.target=java.awt.Color[]\ findLeftPixels(Shred)
comment7.text=\n\ finds\ all\ the\ pixles\ on\ the\ left\ side\ of\ a\ shred\n\ \n
comment8.params=shred
comment8.target=java.awt.Color[]\ findRightPixels(Shred)
comment8.text=\n\ finds\ all\ the\ pixles\ on\ the\ right\ side\ of\ a\ shred\n\ \n
comment9.params=
comment9.target=void\ saveAsOneImmage()
comment9.text=\n\ finds\ the\ dimensiond\ of\ the\ final\ image\n\ puts\ the\ shreds\ in\ to\ one\ 2d\ array\n\ saves\ the\ image\n\ \n
numComments=24
